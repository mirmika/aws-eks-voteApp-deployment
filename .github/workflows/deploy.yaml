name: Build and Deploy to EKS

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger the pipeline on version tags (e.g., v1.0.0)

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Log into Docker
      - name: Log in to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      # Set the image tag to the Git tag or fallback to 'latest'
      - name: Set image tag
        run: |
          echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "Using image tag: $IMAGE_TAG"
        
      # Step 3: Build Docker images with versioned tags
      - name: Build image for result service
        run: |
          cd ./ironhack-project-1/result
          sudo docker build -t your-dockerhub-username/result:${{ env.IMAGE_TAG }} .
          
      - name: Build image for vote service
        run: |
          cd ./ironhack-project-1/vote
          sudo docker build -t your-dockerhub-username/vote:${{ env.IMAGE_TAG }} .

      - name: Build image for worker service
        run: |
          cd ./ironhack-project-1/worker
          sudo docker build -t your-dockerhub-username/worker:${{ env.IMAGE_TAG }} .

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

        # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mkdir -p $HOME/bin
          mv ./kubectl $HOME/bin/kubectl
          echo "$HOME/bin" >> $GITHUB_PATH
          
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      # EKS Deployment
      - name: Generate the final deployment template
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base
          export IMAGE_NAME="docker.io/${{ secrets.DOCKER_USERNAME }}/voting-app-vote:${{ env.IMAGE_TAG }}"
          envsubst < k8s/deployment.template.yaml > k8s/deployment.yaml
          echo "Final deployment.yaml:"
          cat k8s/deployment.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/
