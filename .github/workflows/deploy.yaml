name: Build and Deploy to EKS

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Log into Docker
      - name: Log in to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract version tag from GITHUB_REF
      - name: Extract image tag from GitHub Ref
        id: extract_tag
        run: |
          echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "Using image tag: $IMAGE_TAG"
        
      # Build Docker images with versioned tags
      - name: Build image for result service
        run: |
          cd ./ironhack-project-1/result
          docker build -t mirmika/result:${{ env.IMAGE_TAG }} .
          
      - name: Build image for vote service
        run: |
          cd ./ironhack-project-1/vote
          docker build -t mirmika/vote:${{ env.IMAGE_TAG }} .

      - name: Build image for worker service
        run: |
          cd ./ironhack-project-1/worker
          docker build -t mirmika/worker:${{ env.IMAGE_TAG }} .
      
      # Push Docker images to Docker Hub
      - name: Push image for result service to Docker Hub
        run: |
          docker push mirmika/result:${{ env.IMAGE_TAG }}

      - name: Push image for vote service to Docker Hub
        run: |
          docker push mirmika/vote:${{ env.IMAGE_TAG }}

      - name: Push image for worker service to Docker Hub
        run: |
          docker push mirmika/worker:${{ env.IMAGE_TAG }}

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mkdir -p $HOME/bin
          mv ./kubectl $HOME/bin/kubectl
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      - name: Check IMAGE_TAG before substitution
        run: |
            echo "IMAGE_TAG: ${IMAGE_TAG}"  # Ensure the IMAGE_TAG is set correctly
            
      # EKS Deployment    
      - name: Generate and Deploy to EKS
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base
          
          # Use envsubst to dynamically replace image tags in the Kubernetes YAML files
            export IMAGE_TAG=${{ env.IMAGE_TAG }}

          # Replace image tags in k8s YAML files
          for service in result vote worker; do
          echo "Processing ${service}.yaml:"
          envsubst < k8s/${service}.yaml > k8s/${service}-final.yaml
          echo "Final ${service}.yaml:"
          cat k8s/${service}-final.yaml
          done

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/
