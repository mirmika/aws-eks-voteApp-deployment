name: Build and Deploy to EKS

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
    branches:
      - main  # Trigger on main branch pushes

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Log into Docker
      - name: Log in to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker images with versioned tags
      - name: Build image for result service
        run: |
          cd ./ironhack-project-1/result
          sudo docker build -t mirmika/result:${{ github.ref_name }} .  # Use GitHub tag (version)

      - name: Build image for vote service
        run: |
          cd ./ironhack-project-1/vote
          sudo docker build -t mirmika/vote:${{ github.ref_name }} .

      - name: Build image for worker service
        run: |
          cd ./ironhack-project-1/worker
          sudo docker build -t mirmika/worker:${{ github.ref_name }} .

      # Push Docker images to Docker Hub
      - name: Push image for result service to Docker Hub
        run: |
          export IMAGE_NAME="docker.io/${{ secrets.DOCKER_USERNAME }}/result:${{ github.ref_name }}"
          sudo docker push $IMAGE_NAME

      - name: Push image for vote service to Docker Hub
        run: |
          export IMAGE_NAME="docker.io/${{ secrets.DOCKER_USERNAME }}/vote:${{ github.ref_name }}"
          sudo docker push $IMAGE_NAME

      - name: Push image for worker service to Docker Hub
        run: |
          export IMAGE_NAME="docker.io/${{ secrets.DOCKER_USERNAME }}/worker:${{ github.ref_name }}"
          sudo docker push $IMAGE_NAME

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mkdir -p $HOME/bin
          mv ./kubectl $HOME/bin/kubectl
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

      # EKS Deployment    
      - name: Replace image tags in Kubernetes YAML
        run: |
          echo "Replacing image tags in Kubernetes YAML"
          export IMAGE_TAG=${{ github.ref_name }}  # Extract tag for versioning
          
          # Use envsubst to dynamically replace image tags in the YAML files
          for service in result vote worker; do
            envsubst < k8s/${service}.yaml > k8s/${service}-final.yaml  # Replace tags in YAML
            echo "Final ${service}-final.yaml:"
            cat k8s/${service}-final.yaml
          done

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/
